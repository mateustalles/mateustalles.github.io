{"ast":null,"code":"import _classCallCheck from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Redirect}from'react-router-dom';import{MovieForm,Loading}from'../components';import*as movieAPI from'../services/movieAPI';var EditMovie=/*#__PURE__*/function(_Component){_inherits(EditMovie,_Component);function EditMovie(props){var _this;_classCallCheck(this,EditMovie);_this=_possibleConstructorReturn(this,_getPrototypeOf(EditMovie).call(this,props));_this.state={movie:[],status:'loading',shouldRedirect:false};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(EditMovie,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var match=this.props.match;var id=match.params.id;movieAPI.getMovie(id).then(function(movie){return _this2.setState({movie:movie,status:''});});}},{key:\"handleSubmit\",value:function handleSubmit(updatedMovie){movieAPI.updateMovie(updatedMovie);this.setState({shouldRedirect:true});}},{key:\"render\",value:function render(){var _this$state=this.state,status=_this$state.status,shouldRedirect=_this$state.shouldRedirect,movie=_this$state.movie;if(shouldRedirect){return React.createElement(Redirect,{to:\"/\"});}if(status==='loading'){return React.createElement(Loading,null);}return React.createElement(MovieForm,{movie:movie,onSubmit:this.handleSubmit});}}]);return EditMovie;}(Component);export default EditMovie;","map":{"version":3,"sources":["/home/mateus/Documentos/Trybe/GitHubPages/mateustalles.github.io/projetos/movie-card-library/src/pages/EditMovie.js"],"names":["React","Component","Redirect","MovieForm","Loading","movieAPI","EditMovie","props","state","movie","status","shouldRedirect","handleSubmit","bind","match","id","params","getMovie","then","setState","updatedMovie","updateMovie"],"mappings":"gxCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAEA,OAASC,SAAT,CAAoBC,OAApB,KAAmC,eAAnC,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,sBAA1B,C,GAEMC,CAAAA,S,mEACJ,mBAAYC,KAAZ,CAAmB,2CACjB,2EAAMA,KAAN,GACA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAE,EADI,CAEXC,MAAM,CAAE,SAFG,CAGXC,cAAc,CAAE,KAHL,CAAb,CAKA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAPiB,aAQlB,C,mFAEmB,oBACVC,CAAAA,KADU,CACA,KAAKP,KADL,CACVO,KADU,IAEVC,CAAAA,EAFU,CAEHD,KAAK,CAACE,MAFH,CAEVD,EAFU,CAGlBV,QAAQ,CAACY,QAAT,CAAkBF,EAAlB,EACGG,IADH,CACQ,SAACT,KAAD,QAAW,CAAA,MAAI,CAACU,QAAL,CAAc,CAAEV,KAAK,CAALA,KAAF,CAASC,MAAM,CAAE,EAAjB,CAAd,CAAX,EADR,EAED,C,kDAEYU,Y,CAAc,CACzBf,QAAQ,CAACgB,WAAT,CAAqBD,YAArB,EACA,KAAKD,QAAL,CAAc,CAAER,cAAc,CAAE,IAAlB,CAAd,EACD,C,uCAEQ,iBACmC,KAAKH,KADxC,CACCE,MADD,aACCA,MADD,CACSC,cADT,aACSA,cADT,CACyBF,KADzB,aACyBA,KADzB,CAEP,GAAIE,cAAJ,CAAoB,CAClB,MAAO,qBAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EAAP,CACD,CAED,GAAID,MAAM,GAAK,SAAf,CAA0B,CACxB,MAAO,qBAAC,OAAD,MAAP,CACD,CAED,MACE,qBAAC,SAAD,EAAW,KAAK,CAAED,KAAlB,CAAyB,QAAQ,CAAE,KAAKG,YAAxC,EADF,CAGD,C,uBApCqBX,S,EAuCxB,cAAeK,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieForm, Loading } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: [],\n      status: 'loading',\n      shouldRedirect: false,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { id } = match.params;\n    movieAPI.getMovie(id)\n      .then((movie) => this.setState({ movie, status: '' }));\n  }\n\n  handleSubmit(updatedMovie) {\n    movieAPI.updateMovie(updatedMovie);\n    this.setState({ shouldRedirect: true });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n    );\n  }\n}\n\nexport default EditMovie;\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}